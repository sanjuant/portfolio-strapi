services:
  strapi:
    container_name: strapi
    build:
      context: .
      # dockerfile: Dockerfile   # <- si le nom est différent, dé-commente
    image: strapi:latest
    restart: unless-stopped
    env_file: .env
    environment:
      NODE_ENV: production
      HOST: 0.0.0.0
      PORT: 1337
      PUBLIC_URL: https://new.sanjuant.fr
    depends_on:
      strapiDB:
        condition: service_healthy
    # Pas besoin d'ouvrir un port sur l'hôte si tu passes par BunkerWeb
    expose:
      - "1337"
    volumes:
      - ./public/uploads:/opt/app/public/uploads
    networks:
      - strapi
      - web

  strapiDB:
    container_name: strapiDB
    platform: linux/amd64 # utile sur Mac M1/M2 si erreurs d'images
    image: postgres:16-alpine
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
      # (optionnel) TZ et encodage
      TZ: Europe/Paris
      POSTGRES_INITDB_ARGS: --encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - strapi-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h 127.0.0.1 || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks:
      - strapi

volumes:
  strapi-data:

networks:
  strapi: {}
  web:
    external: true
    name: web
